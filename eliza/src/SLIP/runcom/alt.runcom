*
* This is an alternative version of the main MAKE RUNCOM that
* uses the FAP versions of some primitive SLIP functions instead of
* the usual MAD ones. See HACKING.md for more details.
*
$ ==== Fixing up duplicate names
* core/put.mad and duplicates/put.fap would both like to create object
* file put.bss. Move (ie copy) put.fap to putfap.fap to avoid this.
$ Ignore any messages like PUT    FAP NOT FOUND
MOVE PUT FAP PUTFAP FAP
$ ==== Removing old files
$ Ignore any messages like NO FILES WITH SECOND NAME
DELETE * BCD
DELETE * BSS
$ ==== Compiling SLIP FAP
$ Ignore any TD warning lines printed
$ Compiling ADV
FAP adv (LIST)
$ Compiling HASH
FAP hash (LIST)
$ Compiling INIT
FAP init (LIST)
$ Compiling LSTMT
FAP lstmt (LIST)
$ Compiling MANY
FAP many (LIST)
$ Compiling MEMST
FAP memst (LIST)
$ Compiling PRINIT
FAP prinit (LIST)
$ Compiling PUTGET
FAP putget (LIST)
$ Compiling SQIN
FAP sqin (LIST)
$ ==== Compiling SLIP duplicates
$ Ignore any TD warning lines printed
$ Compiling SEQ
FAP seq (LIST)
$ Compiling DELFAP
FAP delfap (LIST)
$ Compiling POP
FAP pop (LIST)
$ Compiling PUTFAP
FAP putfap (LIST)
$ Compiling NTEST
FAP ntest (LIST)
$ Compiling LST
FAP lst (LIST)
$ Compiling TOPBOT
FAP topbot (LIST)
$ ==== Compiling SLIP core
$ Compiling ADAS
MAD adas (LIST)
$ Compiling EQUAL
MAD equal (LIST)
$ Compiling ERARDR
MAD erardr (LIST)
$ Compiling IRALST
MAD iralst (LIST)
$ Compiling ITSVAL
MAD itsval (LIST)
$ Compiling LCNTR
MAD lcntr (LIST)
$ Compiling LIST
MAD list (LIST)
$ Compiling LISTMT
MAD listmt (LIST)
$ Compiling LISTRD
MAD listrd (LIST)
$ Compiling MADATR
MAD madatr (LIST)
$ Compiling MADIN
MAD madin (LIST)
$ Compiling MAKEDL
MAD makedl (LIST)
$ Compiling NAMTST
MAD namtst (LIST)
$ Compiling NEWTOP
MAD newtop (LIST)
$ Compiling NEWVAL
MAD newval (LIST)
$ Compiling NOATVL
MAD noatvl (LIST)
$ Compiling POPPER
MAD popper (LIST)
$ Compiling PUT
MAD put (LIST)
$ Compiling READER
MAD reader (LIST)
$ Compiling REMOVE
MAD remove (LIST)
$ Compiling RVECT
MAD rvect (LIST)
$ Compiling SEQRDR
MAD seqrdr (LIST)
$ Compiling SUBST
MAD subst (LIST)
$ Compiling TOP
MAD top (LIST)
$ Compiling XMINO
MAD xmino (LIST)
$ ==== Compiling SLIP eliza
$ Compiling PLACE
MAD place (LIST)
$ Compiling FRBCD
MAD frbcd (LIST)
$ Compiling LISTP
MAD listp (LIST)
$ Compiling RDRREV
MAD rdrrev (LIST)
$ Compiling SEQUEN
MAD sequen (LIST)
$ Compiling LSTEQL
MAD lsteql (LIST)
$ Compiling LSSCPY
MAD lsscpy (LIST)
$ Compiling LSPNTR
MAD lspntr (LIST)
$ Compiling SPLIT
MAD split (LIST)
$ Compiling LNKBOT
MAD lnkbot (LIST)
$ Compiling NODLST
MAD nodlst (LIST)
$ Compiling CONLST
MAD conlst (LIST)
$ Compiling PARTN
MAD partn (LIST)
$ Compiling XMATCH
MAD xmatch (LIST)
$ Compiling YMATCH
MAD ymatch (LIST)
$ Compiling ASSMBL
MAD assmbl (LIST)
$ Compiling DAS
MAD das (LIST)
$ Compiling CNTSPC
MAD cntspc (LIST)
$ Compiling GOODY
$ Ignore below warnings for unused labels RDB, TST
MAD goody (LIST)
$ Compiling xlook
MAD xlook (LIST)
$ Compiling TXTPRT
MAD txtprt (LIST)
$ Compiling SUBTOP
MAD subtop (LIST)
$ Compiling LPNTR
MAD lpntr (LIST)
$ ==== Compiling SLIP reconstructed
$ Compiling LETTER
MAD letter (LIST)
$ Compiling BCDIT
MAD bcdit (LIST)
$ Compiling INLSTL
MAD inlstl (LIST)
$ ==== Compiling SLIP tests
$ Compiling TESTBA
MAD testba (LIST)
$ Compiling TESTLT
MAD testlt (LIST)
$ Compiling TESTBC
MAD testbc (LIST)
$ Compiling TESTIL
MAD testil (LIST)
$ ==== Combining the library
* We assemble this in pieces so we are able to do experiments
* on partial sets of functions. Only SLIP BSS is permanently
* needed though.
* FAP
COMBIN * SLIPF BSS       adv hash init lstmt many memst prinit
COMBIN * SLIPF BSS SLIPF putget sqin
* Core
* NB: excluding
*     SEQRDR REMOVE POPPER NEWTOP NAMTST LIST TOP
*     as we use the duplicate FAP version
COMBIN * SLIPC BSS       rvect adas iralst lcntr list
COMBIN * SLIPC BSS SLIPC makedl reader erardr madin equal madatr
COMBIN * SLIPC BSS SLIPC newval subst itsval noatvl xmino
COMBIN * SLIPC BSS SLIPC put listrd
* Eliza
* NB: excluding FRBCD LISTP as we use the version in ELIZA
* NB: excluding SEQUEN as we use the duplicate FAP version
COMBIN * SLIPE BSS       place rdrrev lsteql lsscpy lspntr
COMBIN * SLIPE BSS SLIPE split lnkbot nodlst conlst partn xmatch
COMBIN * SLIPE BSS SLIPE ymatch assmbl das cntspc goody xlook
COMBIN * SLIPE BSS SLIPE txtprt subtop lpntr
* Duplicated
COMBIN * SLIPD BSS       seq delfap pop putfap ntest lst topbot
* Reconstructed
COMBIN * SLIPR BSS       letter bcdit inlstl
* Everything
COMBIN * SLIP  BSS SLIPF SLIPD SLIPC SLIPE SLIPR
* Send the library to common files for pickup by ELIZA
COMFIL 4
$ Ignore SLIP BSS NOT FOUND if printed
DELETE SLIP BSS
COMFIL 0
UPDATE 4 SLIP BSS
$ ==== Running tests
$ This should print TESTING BASIC LISTS only if all OK
LOADGO testba (libe) slip
$ This should print TESTING LETTER only if all OK
LOADGO testlt (libe) slip
$ This should print TESTING BCDIT only if all OK
LOADGO testbc (libe) slip
$ This should print TESTING INLSTL only if all OK
LOADGO testil (libe) slip
$ ==== Finished
$ MAKE HAS BEEN RUN should be printed finally
